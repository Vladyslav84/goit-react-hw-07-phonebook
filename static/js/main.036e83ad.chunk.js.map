{"version":3,"sources":["components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css","api/api.js","redux/operations.js","redux/selectors.js","components/ContactForm/ContactForm.jsx","redux/slices/filter.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","redux/store.js","redux/slices/contacts.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetcContacts","a","axios","get","response","data","postContacts","newContact","post","deleteContacts","delete","defaults","baseURL","createAsyncThunk","api","contactsFromDB","id","getContacts","state","contactsSlice","entities","getFilter","filterSlice","ContactForm","dispatch","useDispatch","allContacts","useSelector","numberInputId","uuidv4","nameInputId","onSubmit","evt","preventDefault","some","contact","name","target","elements","inputName","value","alert","operations","number","inputNumber","reset","className","s","form","formItem","autoComplete","type","pattern","title","required","btn","createSlice","initialState","reducers","filter","_","payload","actions","Filter","onChange","currentTarget","toLocaleLowerCase","ContactList","useEffect","filteredContactList","includes","contactList","map","user","contactitem","onClick","App","container","length","rootReducer","status","error","extraReducers","fulfilled","action","pending","rejected","item","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.036e83ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3NRhL\",\"btn\":\"ContactList_btn__2HQx8\",\"contactitem\":\"ContactList_contactitem__w5wmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__10QHA\",\"title\":\"App_title__2HGxw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__254X5\"};","import axios from 'axios';\r\n\r\n    axios.defaults.baseURL = 'http://localhost:3003';\r\n   \r\n    export async function fetcContacts ()  {\r\n        const response = await axios.get(`/contacts`);\r\n         return response.data;\r\n};\r\n\r\n    export async function postContacts (newContact)  {\r\n        const response = await axios.post(`/contacts`, (newContact))\r\n         return response.data;\r\n};\r\n\r\n    export async function deleteContacts (deleteContacts)  {\r\n        const response = await axios.delete(`/contacts/${deleteContacts}` );\r\n         return response.data;\r\n};\r\n","import * as api from '../api/api'\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const fetcContacts = createAsyncThunk(\r\n  'contacts/fetcContacts',\r\n  async () => {\r\n    try {\r\n      const contactsFromDB = await api.fetcContacts();\r\n      return contactsFromDB;\r\n    } catch (error) {\r\n      return (error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const postContacts = createAsyncThunk(\r\n  'contacts/postContacts',\r\n  async (newContact) => {\r\n    try {\r\n      const contactsFromDB = await api.postContacts(newContact);\r\n      return contactsFromDB;\r\n    } catch (error) {\r\n      return (error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContacts = createAsyncThunk(\r\n  'contacts/deleteContacts',\r\n  async (id) => {\r\n    try {\r\n     await api.deleteContacts(id);\r\n      return id;\r\n    } catch (error) {\r\n      return (error);\r\n    }\r\n  },\r\n);\r\n","\r\nexport const getContacts = state => state.contactsSlice.entities;\r\nexport const getFilter = state => state.filterSlice;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport s from './ContactForm.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport * as operations from '../../redux/operations';\r\nimport { getContacts } from '../../redux/selectors';\r\n\r\nexport default function ContactForm() {\r\n    const dispatch = useDispatch();\r\n    const allContacts = useSelector(getContacts);\r\n\r\n    const handleSubmit = evt => {\r\n\r\n        evt.preventDefault();\r\n        if (allContacts.some(contact => contact.name === evt.target.elements.inputName.value))\r\n        {\r\n            alert(`${ evt.target.elements.inputName.value } is already in contacts`)\r\n        } else\r\n        {\r\n            dispatch(operations.postContacts({\r\n                name: evt.target.elements.inputName.value,\r\n                number: evt.target.elements.inputNumber.value,\r\n            }))\r\n        };\r\n        evt.target.reset();\r\n    };\r\n\r\n    const numberInputId = uuidv4();\r\n    const nameInputId = uuidv4();\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.form}>\r\n            <span>Name</span>\r\n            <label className={s.formItem}>\r\n                <input\r\n                    autoComplete=\"off\"\r\n                    type=\"text\"\r\n                    name=\"inputName\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    id={nameInputId}\r\n                />\r\n            </label>\r\n            <span className={s.number}>Number</span>\r\n            <label className={s.formItem}>\r\n                <input\r\n                    autoComplete=\"off\"\r\n                    type=\"tel\"\r\n                    name=\"inputNumber\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    id={numberInputId}\r\n                />\r\n            </label>\r\n            <button type=\"submit\" className={s.btn}>Add contact</button>\r\n        </form>\r\n    )\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst filterSlice = createSlice({\n    name: 'filter',\n    initialState: '',\n    reducers: {\n        filter: (_, {payload}) => payload,\n       \n           }\n});\n\nexport const { filter } = filterSlice.actions;\n\nexport default filterSlice.reducer;","import React from \"react\";\nimport s from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { filter } from '../../redux/slices/filter';\n\nexport default function Filter () {\nconst dispatch = useDispatch();\n    return (\n        <div>\n            <p className={s.title}>Find contacts by name</p>\n            <label>\n                <input type=\"text\" onChange={(evt) => dispatch(filter(evt.currentTarget.value.toLocaleLowerCase()))}></input>\n            </label>\n        </div>\n    )\n};\n\n","import React, { useEffect } from 'react';\r\nimport s from './ContactList.module.css';\r\nimport {  useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts, getFilter } from '../../redux/selectors';\r\nimport * as operations from '../../redux/operations';\r\n\r\nexport default function ContactList  ()  {\r\n  \r\n  const allContacts = useSelector(getContacts);\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => dispatch(operations.fetcContacts()), [dispatch]);\r\n  const filteredContactList = allContacts.filter(contact =>\r\n    contact.name.toLocaleLowerCase().includes(filter));\r\n \r\n  return (\r\n    <ul className={s.contactList}>\r\n      {filteredContactList.map((user) => (\r\n             \r\n        <li key={user.id} className={s.contactitem} >\r\n          <span>{user.name} {user.number}</span>\r\n          <button type='button' className={s.btn}\r\n            onClick={() => dispatch(operations.deleteContacts(user.id))}\r\n          >Delete</button>\r\n          \r\n        </li>\r\n      ))\r\n      } \r\n    </ul>\r\n  )\r\n}","import ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport s from './App.module.css';\r\nimport { useSelector } from 'react-redux';\r\nimport {getContacts} from './redux/selectors';\r\n\r\nexport default function App() {\r\nconst allContacts = useSelector(getContacts);\r\n  return (\r\n    <div className={s.container}>\r\n      <h1 className={s.title}>Phonebook</h1>\r\n      <ContactForm />\r\n      {allContacts.length > 0 && <h2 className={s.title}>Contacts</h2>}\r\n      {allContacts.length > 0 && <Filter />}\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsSlice from './slices/contacts';\r\nimport filterSlice from './slices/filter';\r\n\r\nconst rootReducer = {\r\n  contactsSlice,\r\n  filterSlice\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: \r\n    rootReducer,\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nexport default store;","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport * as operations from '../operations';\r\n\r\nconst contactsSlice = createSlice({\r\n      name: 'contacts',\r\n    initialState: {\r\n        entities: [],\r\n        status: null,\r\n        error: null,},\r\n    extraReducers: {\r\n        [operations.fetcContacts.fulfilled](state, action) { \r\n            return {\r\n                ...state,\r\n                entities: [...state.entities, ...action.payload],\r\n                status: null,\r\n                error: null,\r\n            }\r\n        },\r\n       [operations.fetcContacts.pending](state, action) { \r\n            return {\r\n                ...state,\r\n                status: 'Loading',\r\n                error: null,\r\n            }\r\n        },\r\n        [operations.fetcContacts.rejected](state, action) { \r\n            return {\r\n                ...state,\r\n                status: null,\r\n                error: 'Error',\r\n            }\r\n        },\r\n        [operations.postContacts.fulfilled](state, action) { \r\n            return { \r\n                ...state,\r\n                entities: [...state.entities, action.payload],\r\n                status: null,\r\n                error: null,\r\n            }\r\n        },\r\n        [operations.postContacts.pending](state, action) { \r\n            return {\r\n                ...state,\r\n                status: 'Loading',\r\n            }\r\n        },\r\n        [operations.postContacts.rejected](state, action) { \r\n            return {\r\n                ...state,\r\n                status: null,\r\n                error: 'Error',\r\n            }\r\n        },\r\n        [operations.deleteContacts.fulfilled](state, action) {\r\n            return {\r\n                ...state,\r\n                entities: state.entities.filter((item) => item.id !== action.payload),\r\n                status: null,\r\n                error: null,\r\n            }\r\n        },\r\n       [operations.deleteContacts.pending](state, action) { \r\n            return {\r\n                ...state,\r\n                status: 'Loading',\r\n                error: null,\r\n            }\r\n        },\r\n        [operations.deleteContacts.rejected](state, action) { \r\n            return {\r\n                ...state,\r\n                status: null,\r\n                error: 'Error',\r\n            }\r\n        },\r\n    }\r\n});\r\n\r\nexport default contactsSlice.reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__25xJC\",\"formItem\":\"ContactForm_formItem__290oU\",\"btn\":\"ContactForm_btn__2q6dz\",\"number\":\"ContactForm_number__1RZ2o\"};"],"sourceRoot":""}